language: php

env:
  matrix:
  - TARGET=flash
  - TARGET=js
  #- TARGET=php
  #- TARGET=neko
  #- TARGET=cpp
  #- TARGET=cs
  #- TARGET=java

matrix:
  fast_finish: true

# Install Haxe and dependencies before running the test.
before_install:
  - git submodule update --init --recursive            # update utest
  - sudo add-apt-repository ppa:eyecreate/haxe -y      # add the ubuntu ppa that contains haxe
  - sudo apt-get update                                # pull info from ppa
  - sudo apt-get install haxe -y                       # install haxe (and neko)
  - sudo apt-get install xvfb x11-xserver-utils xfonts-cyrillic libcurl3:i386 libglib2.0-0:i386 libx11-6:i386 libxext6:i386 libxt6:i386 libxcursor1:i386 libnss3:i386 libgtk2.0-0:i386
  - mkdir ~/haxelib                                    # create a folder for installing haxelib
  - haxelib setup ~/haxelib
  - mkdir -p ./bin
  #- sudo mkdir -p /etc/adobe/FlashPlayerTrust/
  #- sudo touch /etc/adobe/FlashPlayerTrust/test.cfg
  #- sudo echo "/home/travis/bin/test.swf" > /etc/adobe/FlashPlayerTrust/test.cfg
  - mkdir -p "/home/travis/.macromedia/Flash_Player/#Security/FlashPlayerTrust/"
  #- sudo touch "~/.macromedia/Flash_Player/#Security/FlashPlayerTrust/test.cfg"
  - echo "ErrorReportingEnable=1\nTraceOutputFileEnable=1" > "/home/travis/mm.cfg"
  - pwd
  - cd /home/travis/.macromedia/Flash_Player/
  - cd "#Security/FlashPlayerTrust"
  - echo "/home/travis/bin/test.swf" > "test.cfg"
  - cd /home/travis/
  #- echo "/home/travis/bin/test.swf" > "/home/travis/test.cfg"
before_script:
  - sh -c "if [ '$TARGET' = 'cpp' ]; then sudo apt-get install gcc-multilib g++-multilib -y; fi"
  - sh -c "if [ '$TARGET' = 'cpp' ]; then haxelib install hxcpp; fi"
  - sh -c "if [ '$TARGET' = 'cs' ]; then sudo apt-get install mono-gmcs; fi"
  - sh -c "if [ '$TARGET' = 'cs' ]; then haxelib install hxcs; fi"
  - sh -c "if [ '$TARGET' = 'java' ]; then haxelib install hxjava; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then wget http://fpdownload.macromedia.com/pub/flashplayer/updaters/11/flashplayer_11_sa_debug.i386.tar.gz; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then tar xvzf flashplayer_11_sa_debug.i386.tar.gz; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then chmod +x flashplayerdebugger; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then sudo mv flashplayerdebugger /usr/bin/flashplayerdebugger; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then export LD_LIBRARY_PATH=/usr/lib/x86_64-linux-gnu/; fi"

# Run the test!
script:
  - haxe hxml/utest.${TARGET}.hxml
  #- sh -c "if [ '$TARGET' = 'flash' ]; then sh -e /etc/init.d/xvfb start; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then xvfb :100 -screen 0 1024x768x24 -extension RANDR; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then sh -e Xvfb +extension RANDR; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then sh -e /etc/init.d/xvfb stop; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then sh -e Xvfb :99 -screen 0 1024x768x24 2>&1 >/dev/null; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then export DISPLAY=:99.0; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then sh -e /etc/init.d/xvfb start; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then export AUDIODEV=null; fi"
  - sh -c "if [ '$TARGET' = 'flash' ]; then sudo xvfb-run -a -e /dev/stdout ./flashplayerdebugger ./bin/test.swf; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then sudo sh -e /etc/init.d/xvfb stop; fi"
  #- sh -c "if [ '$TARGET' = 'flash' ]; then /usr/bin/flashplayerdebugger ./bin/test.swf; fi"

after_script:
  - sh -c "if [ '$TARGET' = 'flash' ]; then cat /home/username/.macromedia/Flash_Player/Logs/flashlog.txt; fi"

branches:
  only:
    - master